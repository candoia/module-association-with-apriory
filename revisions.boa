p: Project = input;
out : output collection[string] of string;
issues: set of string;
fileslist: string = "";
bugfix: bool;

isBugFixing := function(logging: string, issueRecord: set of string): bool{
  lst := getAsArray(issueRecord);
  foreach(i: int; def(lst[i])){
    if(strfind(lst[i], logging) > -1){
      return true;
    }
  }
  return false;
};

visit(p, visitor {
  before node: Issue -> {
    add(issues, node.number);
  }
});

visit(p, visitor {
  before rev: Revision -> {
    comment :string = rev.log;
    bugfix= isBugFixing(comment, issues);
    if(!bugfix || (len(rev.files) > 5)){
        stop;
    }
  }

  before node: Namespace ->{
    fileslist = fileslist + node.name;
    fileslist = fileslist + ",";
  }

  after node: Revision -> {
    if(len(fileslist) > 1){
      out[formattime("%c", node.commit_date)] << fileslist;
      fileslist = "";
    }
    bugfix = false;
  }
});
